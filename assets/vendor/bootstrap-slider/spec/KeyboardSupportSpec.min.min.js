describe("Keyboard Support Tests",function(){var k,m,h,l=0,n=10,i=1,j=5;describe("Clicking on slider handle automatically gives it focus",function(){beforeEach(function(){k=$("#testSlider1").slider({id:"testSlider"});m=$("#testSlider").find(".slider-track > .slider-handle:first")});it("clicking on handle1 gives focus to handle1",function(){var a=false;m.focus(function(){a=true;expect(a).toBeTruthy()});m.mousedown()})});describe("When slider handle has TAB focus",function(){it("should display it's tooltip if 'tooltip' option is set to 'show'",function(){k=$("#testSlider1").slider({id:"testSlider",tooltip:"show"});m=$("#testSlider").find(".slider-track > .slider-handle:first");var a=$("#testSlider").find("div.tooltip").hasClass("in");expect(a).toBeFalsy();m.focus();a=$("#testSlider").find("div.tooltip").hasClass("in");expect(a).toBeTruthy()});it("should not display it's tooltip if 'tooltip' option is set to 'hide'",function(){k=$("#testSlider1").slider({id:"testSlider",tooltip:"hide"});m=$("#testSlider").find(".slider-track > .slider-handle:first");var a=$("#testSlider1").siblings("div.tooltip").hasClass("hide");expect(a).toBeTruthy();m.focus();a=$("#testSlider1").siblings("div.tooltip").hasClass("hide");expect(a).toBeTruthy()});it("should not affect the tooltip display if 'tooltip' option is set to 'always'",function(){k=$("#testSlider1").slider({id:"testSlider",tooltip:"always"});m=$("#testSlider").find(".slider-track > .slider-handle:first");var a=$("#testSlider1").siblings("div.tooltip").hasClass("in");expect(a).toBeTruthy();m.focus();a=$("#testSlider1").siblings("div.tooltip").hasClass("in");expect(a).toBeTruthy()})});describe("For horizontal sliders where its handle has focus",function(){beforeEach(function(){k=$("#testSlider1").slider({id:"testSlider",orientation:"horizontal",min:l,max:n,step:i,value:j});m=$("#testSlider").find(".slider-track > .slider-handle:first");m.focus()});it("moves to the left by the 'step' value when the LEFT arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j-i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=37;m.trigger(a)});it("moves to the right by the 'step' value when the RIGHT arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j+i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=39;m.trigger(a)});it("moves to the left by the 'step' value when the DOWN arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j-i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=40;m.trigger(a)});it("moves to the right by the 'step' value when the UP arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j+i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=38;m.trigger(a)})});describe("For vertical sliders where its handle has focus",function(){beforeEach(function(){k=$("#testSlider1").slider({id:"testSlider",orientation:"vertical",min:l,max:n,step:i,value:j});m=$("#testSlider").find(".slider-track > .slider-handle:first");m.focus()});it("moves down by the 'step' value when the LEFT arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j-i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=37;m.trigger(a)});it("moves up by the 'step' value when the RIGHT arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j+i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=39;m.trigger(a)});it("moves down by the 'step' value when the DOWN arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j-i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=40;m.trigger(a)});it("moves up by the 'step' value when the UP arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j+i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=38;m.trigger(a)})});describe("For a reversed slider (regardless of 'orientation')",function(){beforeEach(function(){k=$("#testSlider1").slider({id:"testSlider",reversed:true,min:l,max:n,step:i,value:j});m=$("#testSlider").find(".slider-track > .slider-handle:first");m.focus()});it("moves to the left by the 'step' value when the LEFT arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j-i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=37;m.trigger(a)});it("moves to the right by the 'step' value when the RIGHT arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j+i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=39;m.trigger(a)});it("moves to the left by the 'step' value when the DOWN arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j-i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=40;m.trigger(a)});it("moves to the right by the 'step' value when the UP arrow key is pressed",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j+i;expect(b).toBe(c)});var a=$.Event("keydown");a.which=38;m.trigger(a)})});describe("For a range slider (regardless of 'orientation')",function(){beforeEach(function(){k=$("#testSlider1").slider({id:"testSlider",min:l,max:n,step:i,value:[j,j]})});describe("when handle1 tries to overtake handle2 from the left",function(){beforeEach(function(){m=$("#testSlider").find(".slider-track > .slider-handle:first");m.focus()});it("handle2 moves to the right by the step value",function(){m.on("keydown",function(){var b=k.slider("getValue");var c=j+i;expect(b[1]).toBe(c)});var a=$.Event("keydown");a.which=39;m.trigger(a)});it("handle1's value remains unchanged",function(){var a=k.slider("getValue");m.on("keydown",function(){expect(a[0]).toBe(j)});var b=$.Event("keydown");b.which=39;m.trigger(b)})});describe("when handle2 tries to overtake handle1 from the right",function(){beforeEach(function(){h=$("#testSlider").find(".slider-track > .slider-handle:eq( 1 )");h.focus()});it("handle1 moves to the left by the step value",function(){h.on("keydown",function(){var b=k.slider("getValue");var c=j-i;expect(b[0]).toBe(c)});var a=$.Event("keydown");a.which=37;h.trigger(a)});it("handle2's value remains unchanged",function(){var a=k.slider("getValue");h.on("keydown",function(){expect(a[1]).toBe(j)});var b=$.Event("keydown");b.which=37;h.trigger(b)})})});describe("For the natural arrow keys",function(){var a=[{reversed:false,keyEvent:37,expectedSliderValue:j-i,orientation:"horizontal",key:"left"},{reversed:true,keyEvent:37,expectedSliderValue:j+i,orientation:"horizontal",key:"left"},{reversed:false,keyEvent:39,expectedSliderValue:j+i,orientation:"horizontal",key:"right"},{reversed:true,keyEvent:39,expectedSliderValue:j-i,orientation:"horizontal",key:"right"},{reversed:false,keyEvent:38,expectedSliderValue:j-i,orientation:"vertical",key:"up"},{reversed:true,keyEvent:38,expectedSliderValue:j+i,orientation:"vertical",key:"up"},{reversed:false,keyEvent:40,expectedSliderValue:j+i,orientation:"vertical",key:"down"},{reversed:true,keyEvent:40,expectedSliderValue:j-i,orientation:"vertical",key:"down"}];a.forEach(function(b){describe("A"+((b.reversed)?" reversed":"")+b.orientation+" slider is used for the arrow keys",function(){beforeEach(function(){k=$("#testSlider1").slider({id:"testSlider",min:l,max:n,step:i,value:j,natural_arrow_keys:true,reversed:b.reversed,orientation:b.orientation});m=$("#testSlider").find(".slider-track > .slider-handle:first");m.focus()});it("moves to the "+b.key+" by the 'step' value when the "+b.key+" arrow key is pressed",function(){m.on("keydown",function(){var d=k.slider("getValue");var e=b.expectedSliderValue;expect(d).toBe(e)});var c=$.Event("keydown");c.which=b.keyEvent;m.trigger(c)})})})});afterEach(function(){if(k){k.slider("destroy")}})});