$(function(){module("button");test("should provide no conflict",function(){var b=$.fn.button.noConflict();ok(!$.fn.button,"button was set back to undefined (org value)");$.fn.button=b});test("should be defined on jquery object",function(){ok($(document.body).button,"button method is defined")});test("should return element",function(){ok($(document.body).button()[0]==document.body,"document.body returned")});test("should return set state to loading",function(){var b=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(b.html(),"mdo","btn text equals mdo");b.button("loading");equal(b.html(),"fat","btn text equals fat");stop();setTimeout(function(){ok(b.attr("disabled"),"btn is disabled");ok(b.hasClass("disabled"),"btn has disabled class");start()},0)});test("should return reset state",function(){var b=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(b.html(),"mdo","btn text equals mdo");b.button("loading");equal(b.html(),"fat","btn text equals fat");stop();setTimeout(function(){ok(b.attr("disabled"),"btn is disabled");ok(b.hasClass("disabled"),"btn has disabled class");start();stop();b.button("reset");equal(b.html(),"mdo","btn text equals mdo");setTimeout(function(){ok(!b.attr("disabled"),"btn is not disabled");ok(!b.hasClass("disabled"),"btn does not have disabled class");start()},0)},0)});test("should toggle active",function(){var b=$('<button class="btn">mdo</button>');ok(!b.hasClass("active"),"btn does not have active class");b.button("toggle");ok(b.hasClass("active"),"btn has class active")});test("should toggle active when btn children are clicked",function(){var c=$('<button class="btn" data-toggle="button">mdo</button>'),d=$("<i></i>");c.append(d).appendTo($("#qunit-fixture"));ok(!c.hasClass("active"),"btn does not have active class");d.click();ok(c.hasClass("active"),"btn has class active")});test("should toggle active when btn children are clicked within btn-group",function(){var d=$('<div class="btn-group" data-toggle="buttons"></div>'),f=$('<button class="btn">fat</button>'),e=$("<i></i>");d.append(f.append(e)).appendTo($("#qunit-fixture"));ok(!f.hasClass("active"),"btn does not have active class");e.click();ok(f.hasClass("active"),"btn has class active")});test("should check for closest matching toggle",function(){var g='<div class="btn-group" data-toggle="buttons"><label class="btn btn-primary active"><input type="radio" name="options" id="option1" checked="true"> Option 1</label><label class="btn btn-primary"><input type="radio" name="options" id="option2"> Option 2</label><label class="btn btn-primary"><input type="radio" name="options" id="option3"> Option 3</label></div>';g=$(g);var h=$(g.children()[0]);var e=$(g.children()[1]);var f=$(g.children()[2]);g.appendTo($("#qunit-fixture"));ok(h.hasClass("active"),"btn1 has active class");ok(h.find("input").prop("checked"),"btn1 is checked");ok(!e.hasClass("active"),"btn2 does not have active class");ok(!e.find("input").prop("checked"),"btn2 is not checked");e.find("input").click();ok(!h.hasClass("active"),"btn1 does not have active class");ok(!h.find("input").prop("checked"),"btn1 is checked");ok(e.hasClass("active"),"btn2 has active class");ok(e.find("input").prop("checked"),"btn2 is checked");e.find("input").click();ok(!h.hasClass("active"),"btn1 does not have active class");ok(!h.find("input").prop("checked"),"btn1 is checked");ok(e.hasClass("active"),"btn2 has active class");ok(e.find("input").prop("checked"),"btn2 is checked")})});