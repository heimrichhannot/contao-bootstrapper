(function(){QUnit.config.reorder=false;QUnit.config.autorun=false;function b(){var a=[].slice.call(arguments);alert(JSON.stringify(a))}QUnit.log=function(f){if(f.message==="[object Object], undefined:undefined"){return}var e=QUnit.jsDump.parse(f.actual);var a=QUnit.jsDump.parse(f.expected);b("qunit.log",f.result,e,a,f.message,f.source)};QUnit.testStart=function(a){b("qunit.testStart",a.name)};QUnit.testDone=function(a){b("qunit.testDone",a.name,a.failed,a.passed,a.total)};QUnit.moduleStart=function(a){b("qunit.moduleStart",a.name)};QUnit.begin=function(){b("qunit.begin");console.log("Starting test suite");console.log("================================================\n")};QUnit.moduleDone=function(a){if(a.failed===0){console.log('\r\u2714 All tests passed in "'+a.name+'" module')}else{console.log("\u2716 "+a.failed+' tests failed in "'+a.name+'" module')}b("qunit.moduleDone",a.name,a.failed,a.passed,a.total)};QUnit.done=function(a){console.log("\n================================================");console.log("Tests completed in "+a.runtime+" milliseconds");console.log(a.passed+" tests of "+a.total+" passed, "+a.failed+" failed.");b("qunit.done",a.failed,a.passed,a.total,a.runtime)}}());