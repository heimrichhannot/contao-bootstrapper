(function(){QUnit.config.reorder=false;QUnit.config.autorun=false;function a(){var b=[].slice.call(arguments);alert(JSON.stringify(b))}QUnit.log=function(c){if(c.message==="[object Object], undefined:undefined"){return}var d=QUnit.jsDump.parse(c.actual);var b=QUnit.jsDump.parse(c.expected);a("qunit.log",c.result,d,b,c.message,c.source)};QUnit.testStart=function(b){a("qunit.testStart",b.name)};QUnit.testDone=function(b){a("qunit.testDone",b.name,b.failed,b.passed,b.total)};QUnit.moduleStart=function(b){a("qunit.moduleStart",b.name)};QUnit.begin=function(){a("qunit.begin");console.log("Starting test suite");console.log("================================================\n")};QUnit.moduleDone=function(b){if(b.failed===0){console.log('\r\u2714 All tests passed in "'+b.name+'" module')}else{console.log("\u2716 "+b.failed+' tests failed in "'+b.name+'" module')}a("qunit.moduleDone",b.name,b.failed,b.passed,b.total)};QUnit.done=function(b){console.log("\n================================================");console.log("Tests completed in "+b.runtime+" milliseconds");console.log(b.passed+" tests of "+b.total+" passed, "+b.failed+" failed.");a("qunit.done",b.failed,b.passed,b.total,b.runtime)}}());