---
layout: 'default'
hljs: 	'light'
component:	'confirm'
---
<section class="blue">
    <div class="content">
      <div class="grid two">
        <div class="column">
          <h1> Confirm Dialog</h1>
          A confirm dialog is often used if you want the user to verify or accept something.
          When a confirm dialog pops up, the user will have to click either "OK" or "Cancel" to proceed.
        </div>
        <div class="right column">
          <div class="dialog">
            <div>AlertifyJS</div>
            <h1> Confirm </h1>
            <div>
              <div>OK</div> <div>Cancel</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  
  <section class="dark">
    <div class="content">
      <!--Defult usage-->
      <div class="segment">
        <h1><i class="fa fa-flash"></i> Default usage</h1>
        <hr />
        <p>You create a confirm dialog by invoking <code> alertify.confirm(...)</code></p>

        <div class="ui small info message">
          <div class="content">
            <p>
              <i class="fa fa-info-circle"></i>
              Calling <code>alertify.confirm()</code> without passing any parameter will return the confirm dialog instance. You can use this syntax to modify dialog settings before showing it.
              Also you can get the dialog instance (singletons only) by invoking <code>alertify.dialog('confirm');</code>
            </p>
          </div>
        </div>

<pre>
<code class="lang-javascript">
/*
 * @title {String or DOMElement} The dialog title.
 * @message {String or DOMElement} The dialog contents.
 * @onok {Function} Invoked when the user clicks OK button.
 * @oncancel {Function} Invoked when the user clicks Cancel button or closes the dialog.
 *
 * alertify.confirm(title, message, onok, oncancel);
 * 
 * overloads:
 *
 *  alertify.confirm(message);
 *  alertify.confirm(message, onok);
 *  alertify.confirm(message, onok, oncancel);
 *
 */  
alertify.confirm('This is a confirm message!');
</code> 
</pre>
        <div class="RIGHT">
          <a class="button example" href="javascript:void(0);">
            <span> Run </span>
          </a>
        </div>
      </div>

      <!--Settings-->
      <div class="segment">

        <h1><i class="fa fa-book"></i> API reference </h1>
        <hr />
				
				<%for segment in @getDocData(@document.component):%>	
				<%- @partial('segment',false, segment) %>
				<%end%>

        <br /><br />

        <div class="segment">
          <div class="ui small info message">
            <div class="content">
              <p>
                <i class="fa fa-info-circle"></i>
                You can use the <code>.setting()</code> method to set multiple values at once, and also works as a getter.
              </p>
            </div>
          </div>
					
<pre>
<code class="lang-javascript">
//get the closable setting value.
var closable = alertify.dialog('confirm').setting('closable');
//grab the dialog instance and set multiple settings at once.
alertify.dialog('confirm')
  .setting({
    'labels':{ok:'Yup!', cancel:'Nop!'},
    'message': 'This dialog is : ' + (closable ? ' ' : ' not ') + 'closable.' ,
    'onok': function(){ alertify.success('Nice!');},
    'oncancel': function(){ alertify.error('Still nice!');}
  }).show();
</code> 
</pre>
            <div class="RIGHT">
              <a class="button example" href="javascript:void(0);">
                <span> Run </span>
              </a>
            </div>			
        <div>
          </div>
        </div>
      </div><!--//Settings-->


      <!--Common Settings-->
      <div class="segment">

        <h1><i class="fa fa-book"></i> API reference (Common)</h1>
        <hr />
        <p>This refers to settings/methods that are common to all dialogs.</p>
				
				<%for segment in @getDocData('dialog', @document.component):%>	
				<%- @partial('segment', false, segment) %>
				<%end%>

      </div><!--//Common Settings-->
			
			<br/>
			<br/>
    </div>
  </section>