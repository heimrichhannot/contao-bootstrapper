var moment=require("../../moment"),symbolMap={"1":"!","2":"@","3":"#","4":"$","5":"%","6":"^","7":"&","8":"*","9":"(","0":")"},numberMap={"!":"1","@":"2","#":"3","$":"4","%":"5","^":"6","&":"7","*":"8","(":"9",")":"0"},symbolLang={preparse:function(a){return a.replace(/[!@#$%\^&*()]/g,function(b){return numberMap[b]})},postformat:function(a){return a.replace(/\d/g,function(b){return symbolMap[b]})}};exports.preparsePostformat={setUp:function(a){moment.locale("symbol",symbolLang);moment.createFromInputFallback=function(){throw new Error("input not handled by moment")};a()},tearDown:function(a){moment.locale("en-gb");a()},transform:function(a){a.expect(3);a.equal(moment.utc("@)!@-)*-@&","YYYY-MM-DD").unix(),1346025600,"preparse string + format");a.equal(moment.utc("@)!@-)*-@&").unix(),1346025600,"preparse ISO8601 string");a.equal(moment.unix(1346025600).utc().format("YYYY-MM-DD"),"@)!@-)*-@&","postformat");a.done()},"transform from":function(b){b.expect(3);var a=moment([2007,1,28]);b.equal(a.from(moment([2007,1,28]).add({s:90}),true),"@ minutes","postformat should work on moment.fn.from");b.equal(moment().add(6,"d").fromNow(true),"^ days","postformat should work on moment.fn.fromNow");b.equal(moment.duration(10,"h").humanize(),"!) hours","postformat should work on moment.duration.fn.humanize");b.done()},"calendar day":function(c){c.expect(6);var b=moment().hours(2).minutes(0).seconds(0);c.equal(moment(b).calendar(),"Today at @:)) AM","today at the same time");c.equal(moment(b).add({m:25}).calendar(),"Today at @:@% AM","Now plus 25 min");c.equal(moment(b).add({h:1}).calendar(),"Today at #:)) AM","Now plus 1 hour");c.equal(moment(b).add({d:1}).calendar(),"Tomorrow at @:)) AM","tomorrow at the same time");c.equal(moment(b).subtract({h:1}).calendar(),"Today at !:)) AM","Now minus 1 hour");c.equal(moment(b).subtract({d:1}).calendar(),"Yesterday at @:)) AM","yesterday at the same time");c.done()}};