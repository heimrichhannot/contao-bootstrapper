var moment=require("../../moment");exports.minMax={setUp:function(b){moment.locale("en");moment.createFromInputFallback=function(){throw new Error("input not handled by moment")};b()},tearDown:function(b){moment.locale("en");b()},min:function(g){var e=moment(),f=e.clone().add(1,"month"),h=e.clone().subtract(1,"month");g.equal(moment.min(e,f,h),h,"min(now, future, past)");g.equal(moment.min(f,e,h),h,"min(future, now, past)");g.equal(moment.min(f,h,e),h,"min(future, past, now)");g.equal(moment.min(h,f,e),h,"min(past, future, now)");g.equal(moment.min(e,h),h,"min(now, past)");g.equal(moment.min(h,e),h,"min(past, now)");g.equal(moment.min(e),e,"min(now, past)");g.equal(moment.min([e,f,h]),h,"min([now, future, past])");g.equal(moment.min([e,h]),h,"min(now, past)");g.equal(moment.min([e]),e,"min(now)");g.done()},max:function(g){var e=moment(),f=e.clone().add(1,"month"),h=e.clone().subtract(1,"month");g.equal(moment.max(e,f,h),f,"max(now, future, past)");g.equal(moment.max(f,e,h),f,"max(future, now, past)");g.equal(moment.max(f,h,e),f,"max(future, past, now)");g.equal(moment.max(h,f,e),f,"max(past, future, now)");g.equal(moment.max(e,h),e,"max(now, past)");g.equal(moment.max(h,e),e,"max(past, now)");g.equal(moment.max(e),e,"max(now, past)");g.equal(moment.max([e,f,h]),f,"max([now, future, past])");g.equal(moment.max([e,h]),e,"max(now, past)");g.equal(moment.max([e]),e,"max(now)");g.done()}};