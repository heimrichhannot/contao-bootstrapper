(function(){describe("Interaction",function(){describe("clicking control",function(){it("should give it focus",function(a){var b=setup_test('<select><option value="a">A</option><option value="b">B</option></select>',{});Syn.click(b.selectize.$control).delay(0,function(){expect(b.selectize.isFocused).to.be.equal(true);a()})});it("should open dropdown menu",function(a){var b=setup_test('<select><option value="a">A</option><option value="b">B</option></select>',{});Syn.click(b.selectize.$control).delay(0,function(){expect(b.selectize.isOpen).to.be.equal(true);expect(b.selectize.$dropdown.is(":visible")).to.be.equal(true);a()})})});describe("clicking option",function(){it("should select it",function(a){var b=setup_test('<select><option value="">Select an option...</option><option value="a">A</option><option value="b">B</option></select>',{});Syn.click(b.selectize.$control).delay(0,function(){Syn.click($('[data-value="b"]',b.selectize.$dropdown)).delay(0,function(){expect(b.selectize.$input.val()).to.be.equal("b");a()})})});it("should close dropdown",function(a){var b=setup_test('<select><option value="">Select an option...</option><option value="a">A</option><option value="b">B</option></select>',{});Syn.click(b.selectize.$control).delay(0,function(){Syn.click($('[data-value="b"]',b.selectize.$dropdown)).delay(0,function(){expect(b.selectize.isOpen).to.be.equal(false);expect(b.selectize.$dropdown.is(":visible")).to.be.equal(false);a()})})})});describe("typing in input",function(){it("should filter results",function(a){var b=setup_test('<select><option value="">Select an option...</option><option value="a">A</option><option value="b">B</option></select>',{});Syn.click(b.selectize.$control).type("a",b.selectize.$control_input).delay(0,function(){expect($('[data-value="a"]',b.selectize.$dropdown).length).to.be.equal(1);expect($('[data-value="b"]',b.selectize.$dropdown).length).to.be.equal(0);a()})});it("should hide dropdown if no results present",function(a){var b=setup_test('<select><option value="">Select an option...</option><option value="a">A</option><option value="b">B</option></select>',{});Syn.click(b.selectize.$control).type("awaw",b.selectize.$control_input).delay(0,function(){expect(b.selectize.isOpen).to.be.equal(false);expect(b.selectize.$dropdown.is(":visible")).to.be.equal(false);a()})});it('should not hide dropdown if "create" option enabled and no results present',function(a){var b=setup_test('<select><option value="">Select an option...</option><option value="a">A</option><option value="b">B</option></select>',{create:true});Syn.click(b.selectize.$control).type("awaw",b.selectize.$control_input).delay(0,function(){expect(b.selectize.isOpen).to.be.equal(true);expect(b.selectize.$dropdown.is(":visible")).to.be.equal(true);a()})});it("should restore dropdown visibility when backing out of a query without results (backspace)",function(a){var b=setup_test('<select><option value="">Select an option...</option><option value="a">A</option><option value="b">B</option></select>',{});Syn.click(b.selectize.$control).type("awf",b.selectize.$control_input).type("\b\b\b",b.selectize.$control_input).delay(0,function(){expect(b.selectize.isOpen).to.be.equal(true);expect(b.selectize.$dropdown.is(":visible")).to.be.equal(true);a()})});it("should move caret when [left] or [right] pressed",function(a){var b=setup_test('<input type="text" value="a,b,c,d">',{create:true});Syn.click(b.selectize.$control).type("[left][left]whatt",b.selectize.$control_input).delay(0,function(){expect(b.selectize.caretPos).to.be.equal(2);a()})})});describe("blurring the input",function(){it("should close dropdown when createOnBlur is true",function(a){var b=setup_test('<select multiple="multiple"><option></option><option value="a">A</option><option value="b">B</option></select>',{createOnBlur:true,create:function(c){return{value:c,text:c}}});Syn.click(b.selectize.$control).type("fooo",b.selectize.$control_input).delay(0,function(){expect(b.selectize.isOpen).to.be.equal(true);expect(b.selectize.$dropdown.is(":visible")).to.be.equal(true);Syn.click($("#mocha")[0]).delay(0,function(){expect(b.selectize.isOpen).to.be.equal(false);expect(b.selectize.$dropdown.is(":visible")).to.be.equal(false);a()})})})});describe("filtering created items",function(){function a(e){return setup_test('<select multiple="multiple"></select>',{create:true,createFilter:e})}var d="abc";function b(h,e,g){var f=h.selectize;Syn.click(f.$control).type(d,f.$control_input).type(f.settings.delimiter,f.$control_input).delay(0,function(){g(f);e()})}function c(h,g,e){for(var f=0;f<g.length;f++){(function(i){it(h,function(j){b(a(i),j,e)})})(g[f])}}c("should add an item  normally if there is no createFilter",[undefined,null,""],function(e){expect(e.getItem(d).length).to.be.equal(1)});c("should add an item if the input matches the createFilter",["a",/a/,function(){return true}],function(e){expect(e.getItem(d).length).to.be.equal(1)});c("should not add an item or display the create label if the input does not match the createFilter",["foo",/foo/,function(){return false}],function(e){expect(e.getItem(d).length).to.be.equal(0);expect($(e.$dropdown_content).filter(".create").length).to.be.equal(0)})})})})();